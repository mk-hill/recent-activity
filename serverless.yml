service:
  name: activity-mkh-dev

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, env:STAGE, 'dev'}
  region: ${opt:region, env:AWS_REGION, 'us-east-1'}

  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    ACTIVITIES_TABLE: activities-mkh-${self:provider.stage}
    TIME_INDEX: TimeIndex
    PARTITION: ${env:PARTITION}

  tracing:
    lambda: true
    apiGateway: true

package:
  # individually: true
  excludeDevDependencies: true

functions:
  Auth:
    environment:
      JWT_CERT: ${env:JWT_CERT}
    handler: src/lambda/auth.handler

  GetRecent:
    handler: src/lambda/http/getRecentActivity.handler
    events:
      - http:
          method: get
          path: recent
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ACTIVITIES_TABLE}/index/${self:provider.environment.TIME_INDEX}
      - Effect: 'Allow'
        Action:
          - 'xray:PutTelemetryRecords'
        Resource: '*'
      - Effect: 'Allow'
        Action:
          - 'xray:PutTraceSegments'
        Resource: '*'

  CreateCustomActivity:
    handler: src/lambda/http/createCustomActivity.handler
    events:
      - http:
          method: post
          path: ''
          cors: true
          authorizer: Auth
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ACTIVITIES_TABLE}
      - Effect: 'Allow'
        Action:
          - 'xray:PutTelemetryRecords'
        Resource: '*'
      - Effect: 'Allow'
        Action:
          - 'xray:PutTraceSegments'
        Resource: '*'

  CreateGitHubActivity:
    environment:
      GITHUB_SECRET: ${env:GITHUB_SECRET}
    handler: src/lambda/http/createGitHubActivity.handler
    events:
      - http:
          method: post
          path: github
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ACTIVITIES_TABLE}
      - Effect: 'Allow'
        Action:
          - 'xray:PutTelemetryRecords'
        Resource: '*'
      - Effect: 'Allow'
        Action:
          - 'xray:PutTraceSegments'
        Resource: '*'

resources:
  Resources:
    ActivitiesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.ACTIVITIES_TABLE}
        AttributeDefinitions:
          - AttributeName: partition
            AttributeType: S
          - AttributeName: performedAt
            AttributeType: S
          - AttributeName: activityId
            AttributeType: S
        KeySchema:
          - AttributeName: activityId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:provider.environment.TIME_INDEX}
            KeySchema:
              - AttributeName: partition
                KeyType: HASH
              - AttributeName: performedAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
